import { Button, VerticalBox , LineEdit} from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <string> total-savings: "0";
    in property <string> monthly-salary: "0";

    callback calculate-savings(string, string, string, string);
    callback calculate-monthly-salary(string, string, string);

    GridLayout {
        padding: 5px;
        spacing: 5px;
        Row {
            Text {
                text: "Current Savings";
                color: black;
                vertical-alignment: center;
            }
            savings := LineEdit {
                input-type: decimal;
                edited => {calculate-savings(savings.text, interest.text, deposits.text, saving-timeframe.text)}
            }
        }
        Row {
            Text {
                text: "Interest Rate";
                color: black;
                vertical-alignment: center;
            }
            interest := LineEdit {
                input-type: decimal;
                edited => {calculate-savings(savings.text, interest.text, deposits.text, saving-timeframe.text)}
            }
        }
        Row {
            Text {
                text: "Monthly Deposits";
                color: black;
                vertical-alignment: center;
            }
            deposits := LineEdit {
                input-type: decimal;
                edited => {calculate-savings(savings.text, interest.text, deposits.text, saving-timeframe.text)}
            }
        }
        Row {
            Text {
                text: "Years Saving";
                color: black;
                vertical-alignment: center;
            }
            saving-timeframe := LineEdit {
                input-type: decimal;
                edited => {calculate-savings(savings.text, interest.text, deposits.text, saving-timeframe.text)}
            }
        }
        Row {
            Text {
                text: "Years of Payout";
                color: black;
                vertical-alignment: center;
            }
            payout-timeframe := LineEdit {
                input-type: decimal;
                edited => {calculate-monthly-salary(total-savings.text, payout-timeframe.text, interest.text)}
            }
        }
        Row {
            Text {
                text: "Final Savings";
                color: black;
                vertical-alignment: center;
            }
            total-savings := Text {
                text: root.total-savings;
            }
        }
        Row {
            Text {
                text: "Monthly Retirement Income";
                color: black;
                vertical-alignment: center;
            }
            monthly-salary := Text {
                text: root.monthly-salary;
            }
        }
    }
}
